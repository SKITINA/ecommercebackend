const fs = require('fs');
const path = require('path');
const mysql = require('mysql2');

// Configuration de la base de donn√©es
const dbConfig = {
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'ecommerce',
  multipleStatements: true
};

// Cr√©er la connexion
const connection = mysql.createConnection(dbConfig);

console.log('üöÄ Configuration de la base de donn√©es e-commerce...');

// Fonction pour lire et ex√©cuter un fichier SQL
const executeSQLFile = (filePath, description) => {
  return new Promise((resolve, reject) => {
    console.log(`üìÑ Ex√©cution: ${description}`);
    
    fs.readFile(filePath, 'utf8', (err, data) => {
      if (err) {
        console.error(`‚ùå Erreur lors de la lecture de ${filePath}:`, err);
        reject(err);
        return;
      }

      connection.query(data, (err, results) => {
        if (err) {
          console.error(`‚ùå Erreur lors de l'ex√©cution de ${filePath}:`, err);
          reject(err);
          return;
        }

        console.log(`‚úÖ ${description} ex√©cut√© avec succ√®s`);
        resolve(results);
      });
    });
  });
};

// Fonction principale
const setupDatabase = async () => {
  try {
    // Connexion √† la base de donn√©es
    await new Promise((resolve, reject) => {
      connection.connect((err) => {
        if (err) {
          console.error('‚ùå Erreur de connexion √† MySQL:', err);
          reject(err);
          return;
        }
        console.log('‚úÖ Connexion √† MySQL r√©ussie!');
        resolve();
      });
    });

    // Ex√©cution des migrations
    console.log('\nüìã Ex√©cution des migrations...');
    
    await executeSQLFile(
      path.join(__dirname, '../migrations/001_create_categories_table.sql'),
      'Cr√©ation de la table categories'
    );
    
    await executeSQLFile(
      path.join(__dirname, '../migrations/002_create_products_table.sql'),
      'Cr√©ation de la table products'
    );
    
    await executeSQLFile(
      path.join(__dirname, '../migrations/003_create_orders_table.sql'),
      'Cr√©ation de la table orders'
    );
    
    await executeSQLFile(
      path.join(__dirname, '../migrations/004_create_order_items_table.sql'),
      'Cr√©ation de la table order_items'
    );

    // Ex√©cution des seeders
    console.log('\nüå± Ex√©cution des seeders...');
    
    await executeSQLFile(
      path.join(__dirname, '../seeders/001_seed_categories.sql'),
      'Insertion des cat√©gories de base'
    );
    
    await executeSQLFile(
      path.join(__dirname, '../seeders/002_seed_products.sql'),
      'Insertion des produits de base'
    );

    console.log('\nüéâ Configuration de la base de donn√©es termin√©e avec succ√®s!');
    console.log('\nüìä Tables cr√©√©es:');
    console.log('   - categories');
    console.log('   - products');
    console.log('   - orders');
    console.log('   - order_items');
    console.log('\nüå± Donn√©es ins√©r√©es:');
    console.log('   - 10 cat√©gories');
    console.log('   - 25 produits');

  } catch (error) {
    console.error('‚ùå Erreur lors de la configuration:', error);
    process.exit(1);
  } finally {
    connection.end();
  }
};

// Ex√©cution du script
setupDatabase(); 